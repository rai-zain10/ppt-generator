from flask.sansio.app import App


if __name__ == "_main_":
    print("ðŸ”¥ Starting server...")
    try:
        app.run(debug=True, host='0.0.0.0', port=8000)
    except Exception as e:
        print(f"ðŸ’¥ CRASH: {e}")  # Will reveal hidden errors







print("script is running")
from flask import Flask, request, send_file, render_template
from pptx import Presentation
from pptx.util import Inches
import openai
import requests
from io import BytesIO
from PIL import Image
import os

app = Flask(__name__)

# Set your OpenAI API key
openai.api_key = "YOUR_OPENAsk-proj-fglUHqwHLw83VTyfVCVxL50qKJauw2RGR1wJbYDdLkXg2uNWLz8hrOzmtuHW8Ssi-64SI3pL4hT3BlbkFJhDxVj0f_gROlbt0aRMjYk-wBxq_mL5oSwSG-O3OxovZWHchc51VZN5H8N27CjYN7NO-RQZdNUAI_API_KEY"  # Replace with your key

def generate_slide_content(topic):
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": "You are a helpful assistant that creates PowerPoint slide content. Return a title and 3 bullet points."},
            {"role": "user", "content": f"Create slide content about: {topic}"}
        ]
    )
    return response.choices[0].message['content']

def create_ppt(topic, image_url=None):
    prs = Presentation()
    
    # Title Slide
    slide = prs.slides.add_slide(prs.slide_layouts[0])
    title = slide.shapes.title
    subtitle = slide.placeholders[1]
    title.text = f"Presentation: {topic}"
    subtitle.text = "Generated by AI"
    
    # Content Slide
    slide = prs.slides.add_slide(prs.slide_layouts[1])
    title = slide.shapes.title
    content = slide.placeholders[1]
    title.text = f"About {topic}"
    content.text = generate_slide_content(topic)
    
    # Add image if provided
    if image_url:
        try:
            response = requests.get(image_url)
            img = Image.open(BytesIO(response.content))
            img.thumbnail((Inches(4), Inches(3)))
            img_path = "temp_image.png"
            img.save(img_path)
            slide.shapes.add_picture(img_path, Inches(1), Inches(2))
            os.remove(img_path)  # Clean up
        except:
            pass  # Skip if image fails
    
    ppt_path = f"{topic}_Presentation.pptx"
    prs.save(ppt_path)
    return ppt_path

@app.route("/", methods=["GET", "POST"])
def home():
    if request.method == "POST":
        topic = request.form["topic"]
        image_url = request.form.get("image_url", "")
        ppt_path = create_ppt(topic, image_url if image_url else None)
        return send_file(ppt_path, as_attachment=True)
    return render_template("index.html")

if __name__ == "_main_":
    app.run(debug=True)